/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package net.yageek.tulipindicators;

import static org.junit.Assert.*;

import org.junit.Test;

public class TulipTest {

  public void assertDoubleArrayEquals(double[] lhs, double[] rhs, double EPS) {
    assertEquals(lhs.length, rhs.length);

    for (int i = 0; i < rhs.length; i++) {
      assertTrue(Math.abs(rhs[i] - lhs[i]) < EPS);
    }
  }
  @Test
  public void testJNIBindings() {

    double[] inputs = new double[] {-1.0, -2.0, -3.0};
    double[] expected = new double[] {1.0, 2.0, 3.0};

    Bindings.Response resp =
        Bindings.shared().callIndicator("abs", inputs, null);

    assertNotNull(resp);

    assertEquals(0, resp.beginIndex);
    assertDoubleArrayEquals(expected, resp.values, 1e-4);
  }

  @Test
  public void testAverages() {
    final double[] inputs =
        new double[] {81.59, 81.06, 82.87, 83.00, 83.61, 83.15, 82.84, 83.99,
                      84.55, 84.36, 85.53, 86.54, 86.89, 87.77, 87.29};

    final double[] expected =
        new double[] {82.426, 82.738, 83.094, 83.318, 83.628, 83.778,
                      84.254, 84.994, 85.574, 86.218, 86.804};
    final int period = 5;
    Bindings.Response resp = Tulip.sma(inputs, 5);

    assertDoubleArrayEquals(expected, resp.values, 1e-4);
  }

  @Test
  public void testInfoValues() {
    Bindings.IndicatorInfo info = Bindings.shared().getIndicatorInfo("sma");
    assertEquals("sma", info.name);
    assertEquals("Simple Moving Average", info.fullName);
    assertEquals(1, info.inputs.length);
    assertEquals(1, info.options.length);
    assertEquals(1, info.outputs.length);
  }
}
